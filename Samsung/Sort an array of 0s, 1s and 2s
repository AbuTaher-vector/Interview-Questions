class Solution
{
public:
    void sort012(int a[], int n)
    {
        int x=0,y=0,z=0;
        for(int i=0;i<n;i++)
        {
            if(a[i]==0) x++;
            else if(a[i]==1) y++;
            else z++;
        }
        int i=0;
            while(i<n)
            {
                while(x--)
                {
                    a[i]=0;
                    i++;
                }
                while(y--)
                {
                    a[i]=1;
                    i++;
                }
                while(z--)
                {
                    a[i]=2;
                    i++;
                }
            }
       
    }
};

Optimize Solution : 
class Solution
{
public:
    void sort012(int a[], int n)
    {
        int low=0,mid=0,high=n-1;
        while(mid<=high)
        {
            if(a[mid]==0)
            {
                swap(a[mid],a[low]);
                low++,mid++;
            }
            else if(a[mid]==1) mid++;
            else
            {
                swap(a[mid],a[high]);
                high--;
            }
        }
       
    }
};

Link 1 : https://practice.geeksforgeeks.org/problems/sort-an-array-of-0s-1s-and-2s4231/1?page=1&company[]=Amazon&category[]=Arrays&sortBy=submissions
Link 2 : https://leetcode.com/problems/sort-colors/description/
