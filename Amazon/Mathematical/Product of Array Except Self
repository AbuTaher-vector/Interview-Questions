LeetCode : https://leetcode.com/problems/product-of-array-except-self/description/
Code : 
class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        int product=1,cnt=0;
        for(auto x:nums) 
        {
            if(x==0) cnt++;
            if(x!=0) product*=x;
        }
        if(cnt==0){
             for(int i=0;i<nums.size();i++) nums[i]=product/nums[i];
        }
        else if(cnt==1){
             for(int i=0;i<nums.size();i++){
                 if(nums[i]==0) nums[i]=product;
                 else nums[i]=0;
             }
        }
        else{
           for(int i=0;i<nums.size();i++) nums[i]=0;
        }
        return nums;

      
        
    }
};

GeeksforGeeks : https://practice.geeksforgeeks.org/problems/product-array-puzzle4525/1?page=1&company[]=Amazon&category[]=Mathematical&sortBy=submissions
Code : 
class Solution{
  public:
    // nums: given vector
    // return the Product vector P that hold product except self at each index
    vector<long long int> productExceptSelf(vector<long long int>& nums, int n) {
       
       long long int product=1,cnt=0;
        for(int i=0;i<n;i++) 
        {
            if(nums[i]==0) cnt++;
            else product*=nums[i];
        }
        if(cnt==0){
             for(int i=0;i<nums.size();i++) nums[i]=product/nums[i];
        }
        else if(cnt==1){
             for(int i=0;i<nums.size();i++){
                 if(nums[i]==0) nums[i]=product;
                 else nums[i]=0;
             }
        }
        else{
           for(int i=0;i<nums.size();i++) nums[i]=0;
        }
        return nums;      
    }
};
